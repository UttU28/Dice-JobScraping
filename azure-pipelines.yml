trigger: 
  - main
  # - none

pool:
  vmImage: 'ubuntu-latest'

variables:
  imageName: 'dicecontainer'
  version: 'latest'
  # version: '39'
  location: 'eastus'  # Change this to your desired location
  aciName: 'thiscontainerinstance'
  
steps:

- task: AzureKeyVault@2
  displayName: Get Secrets from Key Vault
  inputs:
    azureSubscription: 'dicePipeline'
    KeyVaultName: 'thisdicekeyvault'
    SecretsFilter: '*'
    RunAsPreJob: true

- task: Docker@2
  displayName: 'Login to ACR'
  inputs:
    containerRegistry: 'dockerSC'
    command: 'login'

# - task: Docker@2
#   displayName: 'Build Docker Image'
#   inputs:
#     containerRegistry: 'dockerSC'
#     repository: '$(imageName)'
#     command: 'build'
#     Dockerfile: '**/Dockerfile'
#     tags: $(version)

# - task: Docker@2
#   displayName: 'Push Docker Image'
#   inputs:
#     containerRegistry: 'dockerSC'
#     repository: '$(imageName)'
#     command: 'push'
#     tags: $(version)

- task: JasonBJohnson.azure-pipelines-tasks-terraform.azure-pipelines-tasks-terraform-installer.TerraformInstaller@1
  displayName: Install Terraform

- task: AzureCLI@2
  displayName: "Terraform INIT"
  inputs:
    azureSubscription: dicePipeline
    scriptType: bash
    addSpnToEnvironment: true
    scriptLocation: inlineScript
    inlineScript: |
      export ARM_CLIENT_ID='$(arm-client-id)'
      export ARM_CLIENT_SECRET='$(arm-client-secret)'
      export ARM_TENANT_ID='$(arm-tenant-id)'
      export ARM_SUBSCRIPTION_ID='$(arm-subscription-id)'

      terraform init

- task: TerraformCLI@1
  displayName: Terraform PLAN
  inputs:
    command: plan
    azureSubscription: dicePipeline
    environmentServiceName: dicePipeline
    runAzLogin: true
    allowTelemetryCollection: true


- task: TerraformCLI@1
  displayName: Terraform APPLY
  inputs:
    command: apply
    azureSubscription: dicePipeline
    environmentServiceName: dicePipeline
    runAzLogin: true
    allowTelemetryCollection: true

# - task: AzureCLI@2
#   inputs:
#     azureSubscription: 'dicePipeline'
#     scriptType: 'bash'
#     scriptLocation: 'inlineScript'
#     inlineScript: |
#       #!/bin/bash
      
#       echo "Starting Azure CLI script..."
      
#       echo "Logging in to ACR..."
#       az acr login --name $(acrName)
      
#       echo "Creating or updating Azure Container Instance..."
#       az container create \
#         --resource-group $(resourceGroupName) \
#         --name $(aciName) \
#         --image $(acrName).azurecr.io/$(imageName):$(version) \
#         --cpu 1 \
#         --memory 1 \
#         --restart-policy Never \
#         --registry-username $(acrName) \
#         --registry-password $(acrPassword) \
#         --environment-variables 'databaseServer'='$(databaseServer)' 'databaseName'='$(databaseName)' 'databaseUsername'='$(databaseUsername)' 'databasePassword'='$(databasePassword)' 'blobConnectionString'='$(blobConnectionString)' 'databaseContainer'='$(databaseContainer)' 'jobDataFile'='$(jobDataFile)' 'rawDataFile'='$(rawDataFile)' 
#     displayName: 'Run Azure CLI Script'


